AWSTemplateFormatVersion: "2010-09-09-OC"

# Include file that contains Organization Section.
# The Organization Section describes Accounts, Organizational Units, etc.
Organization: !Include ./organization.yml

# Any Binding that does not explicitly specify a region will default to this.
# Value can be either string or list
DefaultOrganizationBindingRegion: us-west-2

# Matthew Notes:
# Follow AWS best practices for centralized domain management in an AWS multi-account environment.
# Create a primary (or root) hosted zone on one AWS account. e.g. jompx.com
# This account acts as the authoritative source for DNS records for the domain.
# For subdomains, delegate DNS authority to other AWS accounts via NS and SOA records. e.g. test.jompx.com
# This approach allows different teams to manage their own DNS records for their own subdomains while still maintaining centralized control over the primary domain.
# Note that this setup is complicated to achieve using the AWS CDK.

# Matthew Create:
# Create a stack in an account (that matches OrganizationBindings). The name of the stack is a command line parameter.
# A Route53 public hosted zone domain created in network account.
# A Route53 public hosted zone subdomain created in accounts with subdomain tag (in organization.yml).
# (commented out) A Route53 public hosted zone domain created in management/organization account with subdomain management. Org formation does not support tags on the management/organization account so we explicitly need to add the subdomain.

# Removed the SSM params in original template and changed root binding account to network (instead of management).

# Matthew TODO:
# Cannot make region a param. Org-formation expects region to be a literal string and doesn't appear to support !Ref like account.
# Can we wrap org-formation CLI in nx? Do we even want to since it will generally be run once only.

# TTL: 300 = 5 mins, 3600 = 1 hour, 86400 = 1 day

Parameters:
  domainName:
    Type: String

  ttl:
    Type: Number
    Default: 86400

# Section contains a named set of Bindings.
# Bindings determine what resources are deployed where
# These bindings can be !Ref'd from the Resources in the resource section
OrganizationBindings:
  # binding for ManagementHostedZone, ManagementHostedZoneIdParam, ManagementHostedZoneNameParam
  #ManagementHostedZoneBinding:
  #  IncludeMasterAccount: true

  # binding for HostedZone, HostedZoneIdParam, HostedZoneNameParam
  HostedZoneBinding:
    AccountsWithTag: subdomain

  # binding for RootHostedZone, ParentNsRecord
  RootHostedZoneBinding:
    Account: !Ref NetworkAccount

Resources:
  #=========================================#
  # Zone
  #=========================================#

  HostedZone:
    Type: AWS::Route53::HostedZone
    OrganizationBinding: !Ref HostedZoneBinding
    Properties:
      HostedZoneConfig:
        Comment: Domain Hosted Zone
      Name: !Sub "${AWSAccount.Tags.subdomain}.${domainName}."

  #ManagementHostedZoneBinding:
  #  Type: AWS::Route53::HostedZone
  #  OrganizationBinding: !Ref ManagementHostedZoneBinding
  #  Properties:
  #    HostedZoneConfig:
  #      Comment: Domain Hosted Zone
  #    Name: !Sub "management.${domainName}."

  #=========================================#
  # Parent Record
  #=========================================#

  RootHostedZone:
    Type: AWS::Route53::HostedZone
    OrganizationBinding: !Ref RootHostedZoneBinding
    Properties:
      HostedZoneConfig:
        Comment: Root domain
      Name: !Ref domainName

  # be aware that changing the logicalName for a AWS::Route53::RecordSet resource
  # might result in an error. workaround is to remove the resource and then add it.
  ParentNsRecord:
    DependsOn: RootHostedZone
    Type: AWS::Route53::RecordSet
    OrganizationBinding: !Ref RootHostedZoneBinding
    ForeachAccount: !Ref HostedZoneBinding
    Properties:
      Type: NS
      HostedZoneName: !Sub "${domainName}."
      Name: !Sub "${CurrentAccount.Tags.subdomain}.${domainName}."
      TTL: !Ref ttl
      ResourceRecords: !GetAtt CurrentAccount.Resources.HostedZone.NameServers
